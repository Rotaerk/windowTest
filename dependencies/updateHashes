#!/usr/bin/env bash
set -eu

usage() {
  echo >&2 "syntax:
updateHashes --all
updateHashes <depName> [<depName> ...]"
  exit 1
}

manifestsFile='./manifests.nix'
hashesFolder='./hashes'

if (( $# == 0 )); then
  echo >&2 "No arguments provided."
  usage
fi

if [[ $1 == "--all" ]]; then

  if (( $# > 1 )); then
    echo >&2 "Unexpected arguments following --all."
    usage
  fi

  # get an array of the attribute names from the dependencies file.
  read -r -a depNames <<< "$(nix-instantiate --eval -E "builtins.attrNames (import $manifestsFile)")"

  depsToHash=()
  # skip the [ and ] that wrap lists from nix-instantiate.
  for depName in ${depNames[@]:1:(${#depNames[@]}-2)}; do
    # strip double-quotes
    depName="${depName%\"}"
    depName="${depName#\"}"

    depsToHash+=($depName)
  done

else
  
  depsToHash=("$@")

fi

echo 'Deps: '${depsToHash[@]}

nixPrefetchScripts="$(nix-build --no-out-link -E '(import <nixpkgs> {}).nix-prefetch-scripts')"

for dep in "${depsToHash[@]}"; do
  echo 'Dependency: '$dep

  githubArchiveUrl="$(nix-instantiate --eval -E 'with (import '"$manifestsFile"')."'"$dep"'"; "https://github.com/${owner}/${repo}/archive/${rev}.tar.gz"')"

  # strip double-quotes
  githubArchiveUrl="${githubArchiveUrl%\"}"
  githubArchiveUrl="${githubArchiveUrl#\"}"

  echo 'Archive URL: '$githubArchiveUrl

  hash="$($nixPrefetchScripts/bin/nix-prefetch-zip --hash-type sha256 "$githubArchiveUrl")"
  echo 'Hash: '$hash

  hashFile=$hashesFolder/$dep
  echo -n $hash > $hashFile

  echo 'Updated: '$hashFile

done
